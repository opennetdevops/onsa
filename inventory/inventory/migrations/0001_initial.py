# Generated by Django 2.0.7 on 2018-10-18 20:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccessNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('device_type', models.CharField(blank=True, max_length=50)),
                ('mgmt_ip', models.CharField(blank=True, max_length=50)),
                ('model', models.CharField(blank=True, max_length=50)),
                ('vendor', models.CharField(blank=True, max_length=50)),
                ('uplink_interface', models.CharField(max_length=50)),
                ('uplink_ports', models.CharField(blank=True, max_length=50)),
                ('access_node_id', models.CharField(max_length=4)),
                ('provider_vlan', models.CharField(max_length=50)),
                ('logical_unit_id', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccessPort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('port', models.CharField(max_length=50, null=True)),
                ('used', models.BooleanField(default=False)),
                ('access_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.AccessNode')),
            ],
        ),
        migrations.CreateModel(
            name='ClientNode',
            fields=[
                ('name', models.CharField(max_length=50)),
                ('device_type', models.CharField(blank=True, max_length=50)),
                ('mgmt_ip', models.CharField(blank=True, max_length=50)),
                ('model', models.CharField(blank=True, max_length=50)),
                ('vendor', models.CharField(blank=True, max_length=50)),
                ('serial_number', models.CharField(blank=True, max_length=50, primary_key=True, serialize=False, unique=True)),
                ('client', models.CharField(blank=True, max_length=50)),
                ('uplink_port', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClientNodePort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interface_name', models.CharField(blank=True, max_length=50)),
                ('used', models.BooleanField(default=False)),
                ('service_id', models.CharField(blank=True, max_length=50)),
                ('client_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.ClientNode')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('address', models.CharField(blank=True, max_length=50)),
                ('pop_size', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='LogicalUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logical_unit_id', models.PositiveSmallIntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='NsxEdge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('device_type', models.CharField(blank=True, max_length=50)),
                ('mgmt_ip', models.CharField(blank=True, max_length=50)),
                ('model', models.CharField(blank=True, max_length=50)),
                ('vendor', models.CharField(blank=True, max_length=50)),
                ('edge_name', models.CharField(max_length=50)),
                ('ip_wan', models.CharField(max_length=50)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Location')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Portgroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vlan_tag', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('used', models.BooleanField(default=False)),
                ('dvportgroup_id', models.CharField(max_length=50)),
                ('product_id', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RouterNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('device_type', models.CharField(blank=True, max_length=50)),
                ('mgmt_ip', models.CharField(blank=True, max_length=50)),
                ('model', models.CharField(blank=True, max_length=50)),
                ('vendor', models.CharField(blank=True, max_length=50)),
                ('private_wan_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('loopback', models.GenericIPAddressField(blank=True, null=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Location')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VirtualVmwPod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('device_type', models.CharField(blank=True, max_length=50)),
                ('mgmt_ip', models.CharField(blank=True, max_length=50)),
                ('model', models.CharField(blank=True, max_length=50)),
                ('vendor', models.CharField(blank=True, max_length=50)),
                ('uplink_interface', models.CharField(max_length=50, null=True)),
                ('transport_zone_name', models.CharField(blank=True, max_length=50)),
                ('cluster_name', models.CharField(blank=True, max_length=50)),
                ('datastore_id', models.CharField(blank=True, max_length=50)),
                ('respool_id', models.CharField(blank=True, max_length=50)),
                ('datacenter_id', models.CharField(blank=True, max_length=50)),
                ('uplink_pg', models.CharField(blank=True, max_length=50)),
                ('uplink_pg_id', models.CharField(blank=True, max_length=50)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Location')),
                ('router_node', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.RouterNode')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VlanTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vlan_tag', models.CharField(max_length=50, null=True, unique=True)),
                ('access_nodes', models.ManyToManyField(blank=True, to='inventory.AccessNode')),
            ],
        ),
        migrations.CreateModel(
            name='Vrf',
            fields=[
                ('rt', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('used', models.BooleanField(default=False)),
                ('description', models.CharField(max_length=50, null=True)),
                ('client', models.CharField(blank=True, max_length=50, null=True)),
                ('locations', models.ManyToManyField(blank=True, to='inventory.Location')),
            ],
        ),
        migrations.AddField(
            model_name='portgroup',
            name='vmw_pod',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.VirtualVmwPod'),
        ),
        migrations.AddField(
            model_name='nsxedge',
            name='portgroup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Portgroup'),
        ),
        migrations.AddField(
            model_name='logicalunit',
            name='router_nodes',
            field=models.ManyToManyField(blank=True, to='inventory.RouterNode'),
        ),
        migrations.AddField(
            model_name='clientnode',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Location'),
        ),
        migrations.AddField(
            model_name='accessnode',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Location'),
        ),
    ]
