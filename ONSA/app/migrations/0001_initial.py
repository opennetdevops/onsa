# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-06-21 20:26
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CpeLessIrsService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_identifier', models.CharField(max_length=50)),
                ('sco_logical_unit', models.PositiveSmallIntegerField()),
                ('ip_wan', models.CharField(max_length=50)),
                ('client_unit', models.PositiveSmallIntegerField()),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Client')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CpeLessMplsService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_identifier', models.CharField(max_length=50)),
                ('sco_logical_unit', models.PositiveSmallIntegerField()),
                ('ip_wan', models.CharField(max_length=50)),
                ('client_unit', models.PositiveSmallIntegerField()),
                ('vrf_name', models.CharField(max_length=50)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Client')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Hub',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('transport_zone_name', models.CharField(max_length=50)),
                ('cluster_name', models.CharField(max_length=50)),
                ('datastore_id', models.CharField(max_length=50)),
                ('resource_pool_id', models.CharField(max_length=50)),
                ('datacenter_id', models.CharField(max_length=50)),
                ('uplink_ip', models.GenericIPAddressField()),
                ('uplink_pg', models.CharField(max_length=50)),
                ('uplink_pg_id', models.CharField(max_length=50)),
                ('mx_ip', models.GenericIPAddressField()),
                ('vxrail_ae_interface', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='IpPublicSegment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('used', models.BooleanField(default=False)),
                ('ip', models.GenericIPAddressField()),
                ('prefix', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='IpWan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('used', models.BooleanField(default=False)),
                ('network', models.CharField(max_length=50)),
                ('prefix', models.PositiveSmallIntegerField()),
                ('hub', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Hub')),
            ],
        ),
        migrations.CreateModel(
            name='LogicalUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logical_unit_id', models.PositiveSmallIntegerField()),
                ('used', models.BooleanField(default=False)),
                ('hubs', models.ManyToManyField(to='app.Hub')),
            ],
        ),
        migrations.CreateModel(
            name='NsxPublicIrsService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_identifier', models.CharField(max_length=50)),
                ('sco_logical_unit', models.PositiveSmallIntegerField()),
                ('vxrail_logical_unit', models.PositiveSmallIntegerField()),
                ('edge_name', models.CharField(max_length=50)),
                ('ip_wan', models.CharField(max_length=50)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Client')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Portgroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vlan_tag', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('used', models.BooleanField(default=False)),
                ('dvportgroup_id', models.CharField(max_length=50)),
                ('hub', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Hub')),
            ],
        ),
        migrations.CreateModel(
            name='Sco',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('sco_id', models.CharField(max_length=4)),
                ('sco_ae_interface', models.CharField(max_length=50)),
                ('sco_outer_vlan', models.CharField(max_length=50)),
                ('hub', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Hub')),
            ],
        ),
        migrations.CreateModel(
            name='ScoPort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=50)),
                ('port', models.CharField(max_length=50, null=True)),
                ('used', models.BooleanField(default=False)),
                ('vlan_tag', models.CharField(max_length=50, null=True)),
                ('sco', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Sco')),
            ],
        ),
        migrations.AddField(
            model_name='nsxpublicirsservice',
            name='portgroup',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.Portgroup'),
        ),
        migrations.AddField(
            model_name='nsxpublicirsservice',
            name='public_network',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.IpPublicSegment'),
        ),
        migrations.AddField(
            model_name='nsxpublicirsservice',
            name='sco_port',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.ScoPort'),
        ),
        migrations.AddField(
            model_name='cpelessmplsservice',
            name='public_network',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.IpPublicSegment'),
        ),
        migrations.AddField(
            model_name='cpelessmplsservice',
            name='sco_port',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.ScoPort'),
        ),
        migrations.AddField(
            model_name='cpelessirsservice',
            name='public_network',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.IpPublicSegment'),
        ),
        migrations.AddField(
            model_name='cpelessirsservice',
            name='sco_port',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.ScoPort'),
        ),
    ]
